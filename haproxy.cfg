global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/private
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	#ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	#ssl-default-bind-options no-sslv3
	
	#ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256::RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	#ssl-default-bind-options no-sslv3
	
	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL).
	ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
	

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http
	
	
	
#==========
#Frontends
#==========

    
frontend http-in
	#Standard http request
    bind *:80
    mode tcp
    default_backend http-in
    
frontend https-in
	#Standard https in
    bind *:443 
	option tcplog
	mode tcp    
	
	
	# wait up to 5 seconds from the time the tcp socket opens
	# until the hello packet comes in (otherwise fallthru to the default)
	tcp-request inspect-delay 5s
	tcp-request content accept if { req.ssl_hello_type 1 }

	use_backend https-aj-fast if { req_ssl_sni -i fast.atomjump.com }
	use_backend https-woundmapp-demo if { req_ssl_sni -i woundmapp-demo.atomjump.com }
	
	default_backend https-in 
	


#==========
#Backends
#==========

backend http-in
	mode tcp
	balance leastconn
	option ssl-hello-chk 
	
	server atomjump-com-php1 atomjump-com-php1:80
	server atomjump-com-php2 atomjump-com-php2:80
	server atomjump-com-php3 atomjump-com-php3:80
  server atomjump-com-php4 atomjump-com-php4:80
	
	
backend https-in
	mode tcp
	balance leastconn
	option ssl-hello-chk 
	
	server atomjump-com-php1 atomjump-com-php1:443 check
	server atomjump-com-php2 atomjump-com-php2:443 check
	server atomjump-com-php3 atomjump-com-php3:443 check
  server atomjump-com-php4 atomjump-com-php4:443 check
	
backend https-aj-fast
	mode tcp
	balance leastconn
	option ssl-hello-chk 

	server atomjump-com-php1 atomjump-com-php1:3277 check
	server atomjump-com-php2 atomjump-com-php2:3277 check
	server atomjump-com-php3 atomjump-com-php3:3277 check
  server atomjump-com-php4 atomjump-com-php3:3277 check
	
	
backend https-woundmapp-demo
	mode tcp
	balance leastconn
	option ssl-hello-chk 

	server atomjump-com-staging 209.97.162.71:5566 check
	

